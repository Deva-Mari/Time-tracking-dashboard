{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Apps\\\\time-tracking-app\\\\src\\\\components\\\\TimeCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styles from \"./TimeCard.module.css\";\nimport Card from \"./UI/Card\";\nimport ellipsis from \"../assets/icon-ellipsis.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TimeCard = props => {\n  _s();\n\n  // showing data for selected timeframe (day/week/month)\n  let current;\n  let previous;\n  let prevText;\n\n  switch (props.selectedTimeframe) {\n    case \"daily\":\n      current = props.timeframes.daily.current;\n      previous = props.timeframes.daily.previous;\n      prevText = \"Yesterday\";\n      break;\n\n    case \"weekly\":\n      current = props.timeframes.weekly.current;\n      previous = props.timeframes.weekly.previous;\n      prevText = \"Last Week\";\n      break;\n\n    case \"monthly\":\n      current = props.timeframes.monthly.current;\n      previous = props.timeframes.monthly.previous;\n      prevText = \"Last Month\";\n      break;\n\n    default:\n      current = props.timeframes.daily.current;\n      previous = props.timeframes.daily.previous;\n      prevText = \"Yesterday\";\n      break;\n  } // get browser width to dynamically display timeframe position\n\n\n  const w = window.innerWidth; // importing background image conditionally\n\n  const [bgImage, setBgImage] = useState(\"\");\n  let imgName = props.title.toLowerCase().replace(\" \", \"-\");\n  import(`../assets/icon-${imgName}.svg`).then(image => setBgImage(image.default)); //choose color based on title\n\n  let bgColor;\n\n  switch (props.title) {\n    case \"Work\":\n      bgColor = \"hsl(15, 100%, 70%)\";\n      break;\n\n    case \"Play\":\n      bgColor = \"hsl(195, 74%, 62%)\";\n      break;\n\n    case \"Study\":\n      bgColor = \"hsl(348, 100%, 68%)\";\n      break;\n\n    case \"Exercise\":\n      bgColor = \"hsl(145, 58%, 55%)\";\n      break;\n\n    case \"Social\":\n      bgColor = \"hsl(264, 64%, 52%)\";\n      break;\n\n    case \"Self Care\":\n      bgColor = \"hsl(43, 84%, 65%)\";\n      break;\n\n    default:\n      bgColor = \"hsl(195, 74%, 62%)\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: styles[\"time-card\"],\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"article\", {\n        style: {\n          backgroundColor: bgColor\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"img-container\"],\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: bgImage,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.content,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.left,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: props.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [current, \"hrs\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), w > 375 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.timeframes,\n              children: [prevText, \" - \", previous, \"hrs\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.right,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: ellipsis,\n              alt: \"more\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), w <= 375 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.timeframes,\n              children: [prevText, \" - \", previous, \"hrs\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TimeCard, \"p9Xn3sFwMMDVkJhO0VYPrxObUWA=\");\n\n_c = TimeCard;\nexport default TimeCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeCard\");","map":{"version":3,"names":["React","useState","styles","Card","TimeCard","props","current","previous","prevText","selectedTimeframe","timeframes","daily","weekly","monthly","w","window","innerWidth","bgImage","setBgImage","imgName","title","toLowerCase","replace","then","image","default","bgColor","backgroundColor","content","left","right","ellipsis"],"sources":["D:/React-Apps/time-tracking-app/src/components/TimeCard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styles from \"./TimeCard.module.css\";\r\nimport Card from \"./UI/Card\";\r\nimport ellipsis from \"../assets/icon-ellipsis.svg\";\r\n\r\nconst TimeCard = (props) => {\r\n  // showing data for selected timeframe (day/week/month)\r\n  let current;\r\n  let previous;\r\n  let prevText;\r\n  switch (props.selectedTimeframe) {\r\n    case \"daily\":\r\n      current = props.timeframes.daily.current;\r\n      previous = props.timeframes.daily.previous;\r\n      prevText = \"Yesterday\";\r\n      break;\r\n    case \"weekly\":\r\n      current = props.timeframes.weekly.current;\r\n      previous = props.timeframes.weekly.previous;\r\n      prevText = \"Last Week\";\r\n      break;\r\n    case \"monthly\":\r\n      current = props.timeframes.monthly.current;\r\n      previous = props.timeframes.monthly.previous;\r\n      prevText = \"Last Month\";\r\n      break;\r\n    default:\r\n      current = props.timeframes.daily.current;\r\n      previous = props.timeframes.daily.previous;\r\n      prevText = \"Yesterday\";\r\n      break;\r\n  }\r\n\r\n  // get browser width to dynamically display timeframe position\r\n  const w = window.innerWidth;\r\n\r\n  // importing background image conditionally\r\n  const [bgImage, setBgImage] = useState(\"\");\r\n  let imgName = props.title.toLowerCase().replace(\" \", \"-\");\r\n  import(`../assets/icon-${imgName}.svg`).then((image) =>\r\n    setBgImage(image.default)\r\n  );\r\n\r\n  //choose color based on title\r\n  let bgColor;\r\n  switch (props.title) {\r\n    case \"Work\":\r\n      bgColor = \"hsl(15, 100%, 70%)\";\r\n      break;\r\n    case \"Play\":\r\n      bgColor = \"hsl(195, 74%, 62%)\";\r\n      break;\r\n    case \"Study\":\r\n      bgColor = \"hsl(348, 100%, 68%)\";\r\n      break;\r\n    case \"Exercise\":\r\n      bgColor = \"hsl(145, 58%, 55%)\";\r\n      break;\r\n    case \"Social\":\r\n      bgColor = \"hsl(264, 64%, 52%)\";\r\n      break;\r\n    case \"Self Care\":\r\n      bgColor = \"hsl(43, 84%, 65%)\";\r\n      break;\r\n    default:\r\n      bgColor = \"hsl(195, 74%, 62%)\";\r\n  }\r\n\r\n  return (\r\n    <li className={styles[\"time-card\"]}>\r\n      <Card>\r\n        <article style={{ backgroundColor: bgColor }}>\r\n          <div className={styles[\"img-container\"]}>\r\n            <img src={bgImage} alt=\"\" />\r\n          </div>\r\n          <div className={styles.content}>\r\n            <div className={styles.left}>\r\n              <p>{props.title}</p>\r\n              {/* display timeframe dynamically {daily/weekly/monthly} */}\r\n              <p>{current}hrs</p>\r\n              {w > 375 && (\r\n                <p className={styles.timeframes}>\r\n                  {prevText} - {previous}hrs\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className={styles.right}>\r\n              <img src={ellipsis} alt=\"more\" />\r\n              {w <= 375 && (\r\n                <p className={styles.timeframes}>\r\n                  {prevText} - {previous}hrs\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </article>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TimeCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}